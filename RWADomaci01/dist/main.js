(()=>{"use strict";var e=function(){function e(e){this.arr=[],this.baseline=e}return e.prototype.addCrypto=function(e){return this.arr.push(e)},e.prototype.draw=function(e){var t=this;if(null===e)throw new Error("Container value is not set or is null.");this.container=e;var n=["Cryptocurrency","Abbreviation","Value (USD)","Value ("+this.baseline.getAbbreviation()+")"],r=document.createElement("thead");e.appendChild(r);var i=document.createElement("tr");r.appendChild(i),n.forEach((function(e){var t=document.createElement("th");t.innerHTML=e,i.appendChild(t)}));var a=document.createElement("tbody");return this.container.appendChild(a),this.arr.forEach((function(e){var n=document.createElement("tr");a.appendChild(n),e.draw(n),document.getElementById("PriceBaseline"+e.getAbbreviation()).innerHTML=e.convertTo(t.baseline)+" "+t.baseline.getAbbreviation()})),!0},e.prototype.changeBaseline=function(e){return this.baseline=e,this.draw(this.container)},e}(),t=function(){function e(e,t,n){this.name=e,this.abbreviation=t,this.priceUSD=n}return e.prototype.getPriceUSD=function(){return this.priceUSD},e.prototype.getName=function(){return this.name},e.prototype.getAbbreviation=function(){return this.abbreviation},e.prototype.displayInfo=function(){return"Crypto name: "+this.name+",  Abbreviation: "+this.abbreviation+", Price in USD: $"+this.priceUSD+"."},e.prototype.convertTo=function(e){return e.getPriceUSD()/this.priceUSD},e.prototype.draw=function(e){var t=this;if(null===e)throw new Error("Container value is not set or is null.");this.container=e;var n=["Cryotocurrency","Abbreviation","PriceUSD","PriceBaseline"];return n.forEach((function(e,r){var i=document.createElement("td");switch(t.container.appendChild(i),r){case 0:(a=document.createElement("a")).setAttribute("href","https://coinmarketcap.com/currencies/"+t.name+"/"),a.setAttribute("target","_blank"),i.appendChild(a),a.innerHTML=t.name;break;case 1:var a;(a=document.createElement("a")).setAttribute("href","https://coinmarketcap.com/currencies/"+t.name+"/"),a.setAttribute("target","_blank"),i.appendChild(a),a.innerHTML=t.abbreviation;break;case 2:i.innerHTML="$"+t.priceUSD;break;default:i.innerHTML=" "}i.setAttribute("id",""+n[r]+t.abbreviation)})),!0},e}(),n=new t("Bitcoin","BTC",62e3),r=new t("Ethereum","ETH",2e3),i=new t("Ravencoin","RVN",.2),a=new t("Cardano","ADA",1.2),o=new t("Tether","USDT",1),c=new e(n);c.addCrypto(n),c.addCrypto(r),c.addCrypto(i),c.addCrypto(a),c.addCrypto(o);var u=document.createElement("table");document.body.appendChild(u),c.draw(u),console.log(c)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,